#include "bot/ui_manager/UIManager.h"

void UIManager::sendMainBar(const TgBot::Bot &bot, int64_t userId, const int32_t messageId) {
    const auto keyboard = std::make_shared<TgBot::InlineKeyboardMarkup>();
    for (const std::vector<std::string> buttons{"–î–æ—Å—Ç—É–ø–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó", "–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏", "–î–æ–ø–æ–º–æ–≥–∞"};
         const auto &button: buttons) {
        auto createInlineButton = std::make_shared<TgBot::InlineKeyboardButton>();
        createInlineButton->text = button;
        createInlineButton->callbackData = button;
        keyboard->inlineKeyboard.push_back({createInlineButton});
    }
    if (messageId != 0) {
        auto editMessage = bot.getApi().editMessageText(
            "–û–±–µ—Ä—ñ—Ç—å —â–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å üëáüèª", userId, messageId, "", "", nullptr,
            std::make_shared<TgBot::InlineKeyboardMarkup>(*keyboard)
        );
    } else {
        auto sendMessage = bot.getApi().sendMessage(
            userId, "–û–±–µ—Ä—ñ—Ç—å —â–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å üëáüèª", nullptr, nullptr, keyboard
        );
    }
}

void UIManager::sendCategoryBar(const TgBot::Bot &bot, int64_t userId, const int32_t messageId) {
    const auto keyboard = std::make_shared<TgBot::InlineKeyboardMarkup>();

    auto createButton = [&](const std::string &text) {
        auto button = std::make_shared<TgBot::InlineKeyboardButton>();
        button->text = text;
        button->callbackData = text;
        return button;
    };

    keyboard->inlineKeyboard.push_back({createButton("–á–∂–∞"), createButton("–ñ–∏—Ç–ª–æ")});
    keyboard->inlineKeyboard.push_back({createButton("–û–¥—è–≥"), createButton("–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç")});
    keyboard->inlineKeyboard.push_back({createButton("–°—ñ–º º—è"), createButton("–ù–∞–∫–æ–ø–∏—á–µ–Ω–Ω—è")});
    keyboard->inlineKeyboard.push_back({createButton("–û—Å–≤—ñ—Ç–∞"), createButton("–Ü–Ω—à–µ")});

    auto buttonBack = std::make_shared<TgBot::InlineKeyboardButton>();
    buttonBack->text = "–ù–∞–∑–∞–¥";
    buttonBack->callbackData = "–ù–∞–∑–∞–¥";
    keyboard->inlineKeyboard.push_back({buttonBack});

    bot.getApi().editMessageText(
        "–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —è–∫—ñ –≤–∞—Å —Ü—ñ–∫–∞–≤–ª—è—Ç—å ‚úÖ",
        userId,
        messageId,
        "",
        "",
        nullptr,
        std::make_shared<TgBot::InlineKeyboardMarkup>(*keyboard)
    );
}

void UIManager::sendCategoryManagementBar(const TgBot::Bot &bot, int64_t userId, int32_t messageId) {
    const auto keyboard = std::make_shared<TgBot::InlineKeyboardMarkup>();
    for (const std::vector<std::string> buttons{
             "–î–æ–¥–∞—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é", "–í–∏–¥–∞–ª–∏—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é", "–û–Ω–æ–≤–∏—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é",
             "–°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π", "–ó–≤—ñ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π", "–ù–∞–∑–∞–¥"
         };
         const auto &button: buttons) {
        auto createInlineButton = std::make_shared<TgBot::InlineKeyboardButton>();
        createInlineButton->text = button;
        createInlineButton->callbackData = button;
        keyboard->inlineKeyboard.push_back({createInlineButton});
    }
    auto editMessage = bot.getApi().editMessageText(
        "–û–±–µ—Ä—ñ—Ç—å —â–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å üëáüèª", userId, messageId, "", "",
        nullptr, std::make_shared<TgBot::InlineKeyboardMarkup>(*keyboard));
}

void UIManager::sendReportTransactionBar(const TgBot::Bot &bot, int64_t userId, const int32_t messageId) {
    const auto keyboard = std::make_shared<TgBot::InlineKeyboardMarkup>();
    for (const std::vector<std::string> buttons{
             "–°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –∑–∞ —Ç–∏–∂–¥–µ–Ω—å", "–°—É–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –∑–∞ —Ç–∏–∂–¥–µ–Ω—å",
             "–°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –∑–∞ –º—ñ—Å—è—Ü—å", "–°—É–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –∑–∞ –º—ñ—Å—è—Ü—å", "–ù–∞–∑–∞–¥"
         };
         const auto &button: buttons) {
        auto createInlineButton = std::make_shared<TgBot::InlineKeyboardButton>();
        createInlineButton->text = button;
        createInlineButton->callbackData = button;
        keyboard->inlineKeyboard.push_back({createInlineButton});
    }
    auto editMessage = bot.getApi().editMessageText(
        "–û–±–µ—Ä—ñ—Ç—å —è–∫–∏–π –∑–≤—ñ—Ç –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å üëáüèª", userId, messageId, "", "",
        nullptr, std::make_shared<TgBot::InlineKeyboardMarkup>(*keyboard));
}
